% алгоритм выборки из лога целых пакетов показаний акселерометра
while n <= length(data) - 8
    if k == 0
        % Байт равный 170 - начала пакета данных
        if data(n) == 170
            k = 1;
        end
        n = n + 1;
    else
        if data(n) == 170
            k = 2;
            % Проверка, достаточно ли байтов в пакете
            if length(data) - 8
                % Извлечение данных из пакета
                acc = data(n-1:n+8);
                % Байт равный 255 - конец пакета
                if data(n+7) == 255 & data(n+8) == 255
                    % Преобразование байтов в int16 и добавление показаний с акселерометра в массив
                    acc = typecast(data(n+1:n+6), 'int16');
                    Accel = double([Accel;acc]); % Сырые показания с акселерометра
                    n = n+9;
                    k = 0;
                else
                    % Если пакет невалидный, то пропускаем его и ищем следующий
                    k = 0;
                    n = n + 1;
                end
            else
                % Если достигнут конец потока байтов, то выходим из цикла
                break
            end
        else
            % Если текущий байт не является началом пакета данных, то продолжаем поиск начала пакета
            k = 0;
            n = n + 1;
        end
    end
end

% Удаление мусора
Accel(2500:2800, :) = [];
Accel(4800:5200, :) = [];
Accel(7000:7400, :) = [];
Accel(9000:10000, :) = [];
Accel(11000:11500, :) = [];
Accel(12000:12800, :) = [];

% Вычисление модуля ускорения
Module = arrayfun(@(j) norm(Accel(j,:)), 1:size(Accel,1))';